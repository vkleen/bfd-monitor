# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bfdd import bfdd_pb2 as bfdd__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class BfdApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Start = channel.unary_unary(
                '/api.BfdApi/Start',
                request_serializer=bfdd__pb2.StartRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Stop = channel.unary_unary(
                '/api.BfdApi/Stop',
                request_serializer=bfdd__pb2.StopRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.AddPeer = channel.unary_unary(
                '/api.BfdApi/AddPeer',
                request_serializer=bfdd__pb2.AddPeerRequest.SerializeToString,
                response_deserializer=bfdd__pb2.AddPeerResponse.FromString,
                )
        self.UpdatePeer = channel.unary_unary(
                '/api.BfdApi/UpdatePeer',
                request_serializer=bfdd__pb2.UpdatePeerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeletePeer = channel.unary_unary(
                '/api.BfdApi/DeletePeer',
                request_serializer=bfdd__pb2.DeletePeerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListPeer = channel.unary_stream(
                '/api.BfdApi/ListPeer',
                request_serializer=bfdd__pb2.ListPeerRequest.SerializeToString,
                response_deserializer=bfdd__pb2.ListPeerResponse.FromString,
                )
        self.GetPeerState = channel.unary_unary(
                '/api.BfdApi/GetPeerState',
                request_serializer=bfdd__pb2.GetPeerStateRequest.SerializeToString,
                response_deserializer=bfdd__pb2.PeerStateResponse.FromString,
                )
        self.MonitorPeer = channel.unary_stream(
                '/api.BfdApi/MonitorPeer',
                request_serializer=bfdd__pb2.MonitorPeerRequest.SerializeToString,
                response_deserializer=bfdd__pb2.PeerStateResponse.FromString,
                )
        self.DisablePeer = channel.unary_unary(
                '/api.BfdApi/DisablePeer',
                request_serializer=bfdd__pb2.DisablePeerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.EnablePeer = channel.unary_unary(
                '/api.BfdApi/EnablePeer',
                request_serializer=bfdd__pb2.EnablePeerRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class BfdApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Start(self, request, context):
        """Manage the overall server state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPeer(self, request, context):
        """Manage the peers of the bfd server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPeerState(self, request, context):
        """Manage the state of the peers of the bfd server
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MonitorPeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisablePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnablePeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BfdApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=bfdd__pb2.StartRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=bfdd__pb2.StopRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'AddPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPeer,
                    request_deserializer=bfdd__pb2.AddPeerRequest.FromString,
                    response_serializer=bfdd__pb2.AddPeerResponse.SerializeToString,
            ),
            'UpdatePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePeer,
                    request_deserializer=bfdd__pb2.UpdatePeerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeletePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePeer,
                    request_deserializer=bfdd__pb2.DeletePeerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListPeer': grpc.unary_stream_rpc_method_handler(
                    servicer.ListPeer,
                    request_deserializer=bfdd__pb2.ListPeerRequest.FromString,
                    response_serializer=bfdd__pb2.ListPeerResponse.SerializeToString,
            ),
            'GetPeerState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPeerState,
                    request_deserializer=bfdd__pb2.GetPeerStateRequest.FromString,
                    response_serializer=bfdd__pb2.PeerStateResponse.SerializeToString,
            ),
            'MonitorPeer': grpc.unary_stream_rpc_method_handler(
                    servicer.MonitorPeer,
                    request_deserializer=bfdd__pb2.MonitorPeerRequest.FromString,
                    response_serializer=bfdd__pb2.PeerStateResponse.SerializeToString,
            ),
            'DisablePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.DisablePeer,
                    request_deserializer=bfdd__pb2.DisablePeerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'EnablePeer': grpc.unary_unary_rpc_method_handler(
                    servicer.EnablePeer,
                    request_deserializer=bfdd__pb2.EnablePeerRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.BfdApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BfdApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/Start',
            bfdd__pb2.StartRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/Stop',
            bfdd__pb2.StopRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/AddPeer',
            bfdd__pb2.AddPeerRequest.SerializeToString,
            bfdd__pb2.AddPeerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/UpdatePeer',
            bfdd__pb2.UpdatePeerRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/DeletePeer',
            bfdd__pb2.DeletePeerRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.BfdApi/ListPeer',
            bfdd__pb2.ListPeerRequest.SerializeToString,
            bfdd__pb2.ListPeerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPeerState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/GetPeerState',
            bfdd__pb2.GetPeerStateRequest.SerializeToString,
            bfdd__pb2.PeerStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MonitorPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.BfdApi/MonitorPeer',
            bfdd__pb2.MonitorPeerRequest.SerializeToString,
            bfdd__pb2.PeerStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisablePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/DisablePeer',
            bfdd__pb2.DisablePeerRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnablePeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.BfdApi/EnablePeer',
            bfdd__pb2.EnablePeerRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
